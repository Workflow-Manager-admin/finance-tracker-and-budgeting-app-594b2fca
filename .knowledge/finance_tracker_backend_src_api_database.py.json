{"is_source_file": true, "format": "Python", "description": "This file defines ORM models for a finance tracking application, including database connection setup, models for users and transactions, and utility functions for database initialization and password management.", "external_files": ["sqlalchemy", "passlib.context", "dotenv"], "external_methods": ["load_dotenv", "sessionmaker", "create_engine"], "published": ["create_db_and_tables", "get_db", "get_password_hash", "verify_password"], "classes": [{"name": "User", "description": "ORM model representing a user in the database, including email, hashed password, and relationship to transactions."}, {"name": "Transaction", "description": "ORM model representing a financial transaction, including amount, category, type, date, description, and associated user."}], "methods": [{"name": "create_db_and_tables()", "description": "Creates all tables defined by ORM models if they do not already exist.", "scope": "", "scopeKind": ""}, {"name": "get_db()", "description": "Provides a database session; intended for use with dependency injection or context management.", "scope": "", "scopeKind": ""}, {"name": "str get_password_hash(password: str)", "description": "Returns a hashed version of the input password.", "scope": "", "scopeKind": ""}, {"name": "bool verify_password(plain_password: str, hashed_password: str)", "description": "Verifies whether the provided plain password matches the stored hashed password.", "scope": "", "scopeKind": ""}], "calls": ["sqlalchemy.create_engine", "sqlalchemy.orm.sessionmaker", "sqlalchemy.ext.declarative.declarative_base", "dotenv.load_dotenv", "Base.metadata.create_all", "SessionLocal()", "pwd_context.hash", "pwd_context.verify"], "search-terms": ["SQLAlchemy ORM models", "User model", "Transaction model", "create_engine", "sessionmaker", "bcrypt"], "state": 2, "file_id": 10, "knowledge_revision": 37, "git_revision": "1e279d9a2b35456ef5ccbd34cbbb72f9cc9ab022", "revision_history": [{"21": ""}, {"37": "1e279d9a2b35456ef5ccbd34cbbb72f9cc9ab022"}], "ctags": [{"_type": "tag", "name": "Base", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-594b2fca/finance_tracker_backend/src/api/database.py", "pattern": "/^Base = declarative_base()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "SQLALCHEMY_DATABASE_URL", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-594b2fca/finance_tracker_backend/src/api/database.py", "pattern": "/^SQLALCHEMY_DATABASE_URL = os.getenv(\"DATABASE_URL\", \"sqlite:\\/\\/\\/.\\/finance_app.db\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "SessionLocal", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-594b2fca/finance_tracker_backend/src/api/database.py", "pattern": "/^SessionLocal = sessionmaker(bind=engine, autoflush=False, autocommit=False, future=True)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "Transaction", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-594b2fca/finance_tracker_backend/src/api/database.py", "pattern": "/^class Transaction(Base):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "User", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-594b2fca/finance_tracker_backend/src/api/database.py", "pattern": "/^class User(Base):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "__tablename__", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-594b2fca/finance_tracker_backend/src/api/database.py", "pattern": "/^    __tablename__ = \"transactions\"$/", "file": true, "language": "Python", "kind": "variable", "scope": "Transaction", "scopeKind": "class"}, {"_type": "tag", "name": "__tablename__", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-594b2fca/finance_tracker_backend/src/api/database.py", "pattern": "/^    __tablename__ = \"users\"$/", "file": true, "language": "Python", "kind": "variable", "scope": "User", "scopeKind": "class"}, {"_type": "tag", "name": "amount", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-594b2fca/finance_tracker_backend/src/api/database.py", "pattern": "/^    amount = Column(Float, nullable=False)$/", "language": "Python", "kind": "variable", "scope": "Transaction", "scopeKind": "class"}, {"_type": "tag", "name": "category", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-594b2fca/finance_tracker_backend/src/api/database.py", "pattern": "/^    category = Column(String, nullable=False)$/", "language": "Python", "kind": "variable", "scope": "Transaction", "scopeKind": "class"}, {"_type": "tag", "name": "create_db_and_tables", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-594b2fca/finance_tracker_backend/src/api/database.py", "pattern": "/^def create_db_and_tables():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "date", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-594b2fca/finance_tracker_backend/src/api/database.py", "pattern": "/^    date = Column(Date, nullable=False)$/", "language": "Python", "kind": "variable", "scope": "Transaction", "scopeKind": "class"}, {"_type": "tag", "name": "description", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-594b2fca/finance_tracker_backend/src/api/database.py", "pattern": "/^    description = Column(String, nullable=True)$/", "language": "Python", "kind": "variable", "scope": "Transaction", "scopeKind": "class"}, {"_type": "tag", "name": "email", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-594b2fca/finance_tracker_backend/src/api/database.py", "pattern": "/^    email = Column(String, unique=True, index=True, nullable=False)$/", "language": "Python", "kind": "variable", "scope": "User", "scopeKind": "class"}, {"_type": "tag", "name": "engine", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-594b2fca/finance_tracker_backend/src/api/database.py", "pattern": "/^engine = create_engine($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "get_db", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-594b2fca/finance_tracker_backend/src/api/database.py", "pattern": "/^def get_db():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "get_password_hash", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-594b2fca/finance_tracker_backend/src/api/database.py", "pattern": "/^def get_password_hash(password: str) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(password: str)"}, {"_type": "tag", "name": "hashed_password", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-594b2fca/finance_tracker_backend/src/api/database.py", "pattern": "/^    hashed_password = Column(String, nullable=False)$/", "language": "Python", "kind": "variable", "scope": "User", "scopeKind": "class"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-594b2fca/finance_tracker_backend/src/api/database.py", "pattern": "/^    id = Column(Integer, primary_key=True, index=True)$/", "language": "Python", "kind": "variable", "scope": "Transaction", "scopeKind": "class"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-594b2fca/finance_tracker_backend/src/api/database.py", "pattern": "/^    id = Column(Integer, primary_key=True, index=True)$/", "language": "Python", "kind": "variable", "scope": "User", "scopeKind": "class"}, {"_type": "tag", "name": "pwd_context", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-594b2fca/finance_tracker_backend/src/api/database.py", "pattern": "/^pwd_context = CryptContext(schemes=[\"bcrypt\"], deprecated=\"auto\")$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "transactions", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-594b2fca/finance_tracker_backend/src/api/database.py", "pattern": "/^    transactions = relationship(\"Transaction\", back_populates=\"user\", cascade=\"all, delete-orpha/", "language": "Python", "kind": "variable", "scope": "User", "scopeKind": "class"}, {"_type": "tag", "name": "type", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-594b2fca/finance_tracker_backend/src/api/database.py", "pattern": "/^    type = Column(String, nullable=False)  # 'income' or 'expense'$/", "language": "Python", "kind": "variable", "scope": "Transaction", "scopeKind": "class"}, {"_type": "tag", "name": "user", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-594b2fca/finance_tracker_backend/src/api/database.py", "pattern": "/^    user = relationship(\"User\", back_populates=\"transactions\")$/", "language": "Python", "kind": "variable", "scope": "Transaction", "scopeKind": "class"}, {"_type": "tag", "name": "user_id", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-594b2fca/finance_tracker_backend/src/api/database.py", "pattern": "/^    user_id = Column(Integer, ForeignKey(\"users.id\"), nullable=False)$/", "language": "Python", "kind": "variable", "scope": "Transaction", "scopeKind": "class"}, {"_type": "tag", "name": "verify_password", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-594b2fca/finance_tracker_backend/src/api/database.py", "pattern": "/^def verify_password(plain_password: str, hashed_password: str) -> bool:$/", "language": "Python", "typeref": "typename:bool", "kind": "function", "signature": "(plain_password: str, hashed_password: str)"}], "hash": "0bfc64c47e9187d92aac832024df8766", "format-version": 4, "code-base-name": "finance_tracker_backend", "filename": "finance_tracker_backend/src/api/database.py", "fields": [{"name": "Base = declarative_base()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "SQLALCHEMY_DATABASE_URL = os.getenv(\"DATABASE_URL\", \"sqlite:\\/\\/\\/.\\/finance_app.db\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "SessionLocal = sessionmaker(bind=engine, autoflush=False, autocommit=False, future=True)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "__tablename__ = \"transactions\"", "scope": "Transaction", "scopeKind": "class", "description": "unavailable"}, {"name": "__tablename__ = \"users\"", "scope": "User", "scopeKind": "class", "description": "unavailable"}, {"name": "amount = Column(Float, nullable=False)", "scope": "Transaction", "scopeKind": "class", "description": "unavailable"}, {"name": "category = Column(String, nullable=False)", "scope": "Transaction", "scopeKind": "class", "description": "unavailable"}, {"name": "date = Column(Date, nullable=False)", "scope": "Transaction", "scopeKind": "class", "description": "unavailable"}, {"name": "description = Column(String, nullable=True)", "scope": "Transaction", "scopeKind": "class", "description": "unavailable"}, {"name": "email = Column(String, unique=True, index=True, nullable=False)", "scope": "User", "scopeKind": "class", "description": "unavailable"}, {"name": "engine = create_engine(", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "hashed_password = Column(String, nullable=False)", "scope": "User", "scopeKind": "class", "description": "unavailable"}, {"name": "id = Column(Integer, primary_key=True, index=True)", "scope": "Transaction", "scopeKind": "class", "description": "unavailable"}, {"name": "pwd_context = CryptContext(schemes=[\"bcrypt\"], deprecated=\"auto\")", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "transactions = relationship(\"Transaction\", back_populates=\"user\", cascade=\"all, delete-orpha/", "scope": "User", "scopeKind": "class", "description": "unavailable"}, {"name": "type = Column(String, nullable=False)  # 'income' or 'expense'", "scope": "Transaction", "scopeKind": "class", "description": "unavailable"}, {"name": "user = relationship(\"User\", back_populates=\"transactions\")", "scope": "Transaction", "scopeKind": "class", "description": "unavailable"}, {"name": "user_id = Column(Integer, ForeignKey(\"users.id\"), nullable=False)", "scope": "Transaction", "scopeKind": "class", "description": "unavailable"}]}