{"is_source_file": true, "format": "Python", "description": "This file defines API endpoints for managing financial transactions, including CRUD operations and analytics summaries, using FastAPI and SQLAlchemy ORM.", "external_files": ["src.api.db", "src.api.auth"], "external_methods": ["get_db", "Transaction", "get_current_user"], "published": ["router"], "classes": [{"name": "TransactionBase", "description": "Pydantic model for basic transaction data, including amount, category, description, date, and type."}, {"name": "TransactionCreate", "description": "Inherits from TransactionBase; used for creating new transactions."}, {"name": "TransactionOut", "description": "Extends TransactionBase with an additional id field for output responses."}], "methods": [{"name": "get_transactions(db: Session = Depends(get_db), user=Depends(get_current_user))", "description": "Retrieves all transactions for the current user, ordered by date descending.", "scope": "", "scopeKind": ""}, {"name": "create_transaction(txn: TransactionCreate, db: Session = Depends(get_db), user=Depends(get_current_user))", "description": "Creates a new transaction record for the current user.", "scope": "", "scopeKind": ""}, {"name": "delete_transaction(txn_id: int, db: Session = Depends(get_db), user=Depends(get_current_user))", "description": "Deletes a transaction with the specified ID for the current user.", "scope": "", "scopeKind": ""}, {"name": "update_transaction(txn_id: int, txn: TransactionCreate, db: Session = Depends(get_db), user=Depends(get_current_user))", "description": "Updates an existing transaction with new data.", "scope": "", "scopeKind": ""}, {"name": "analytics_summary(db: Session = Depends(get_db), user=Depends(get_current_user))", "description": "Provides financial analytics including total income, total expenses, and per-category spending breakdown for the user.", "scope": "", "scopeKind": ""}], "calls": ["db.query(Transaction)", "db.add(obj)", "db.commit()", "db.refresh(obj)", "db.delete(obj)"], "search-terms": ["transactions", "finance API", "CRUD transactions", "budget analytics", "FastAPI transactions endpoints"], "state": 2, "file_id": 16, "knowledge_revision": 50, "git_revision": "00de50f68cdc61027dab03707f278de8d60c473d", "revision_history": [{"47": ""}, {"50": "00de50f68cdc61027dab03707f278de8d60c473d"}], "ctags": [{"_type": "tag", "name": "TransactionBase", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-594b2fca/finance_tracker_backend/src/api/transactions.py", "pattern": "/^class TransactionBase(BaseModel):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "TransactionCreate", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-594b2fca/finance_tracker_backend/src/api/transactions.py", "pattern": "/^class TransactionCreate(TransactionBase):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "TransactionOut", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-594b2fca/finance_tracker_backend/src/api/transactions.py", "pattern": "/^class TransactionOut(TransactionBase):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "amount", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-594b2fca/finance_tracker_backend/src/api/transactions.py", "pattern": "/^    amount: float = Field(..., description=\"Transaction amount (positive for income, negative fo/", "language": "Python", "typeref": "typename:float", "kind": "variable", "scope": "TransactionBase", "scopeKind": "class"}, {"_type": "tag", "name": "analytics_summary", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-594b2fca/finance_tracker_backend/src/api/transactions.py", "pattern": "/^def analytics_summary(db: Session = Depends(get_db), user=Depends(get_current_user)):$/", "language": "Python", "kind": "function", "signature": "(db: Session = Depends(get_db), user=Depends(get_current_user))"}, {"_type": "tag", "name": "category", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-594b2fca/finance_tracker_backend/src/api/transactions.py", "pattern": "/^    category: str = Field(..., description=\"Spending\\/income category\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "TransactionBase", "scopeKind": "class"}, {"_type": "tag", "name": "create_transaction", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-594b2fca/finance_tracker_backend/src/api/transactions.py", "pattern": "/^def create_transaction(txn: TransactionCreate, db: Session = Depends(get_db), user=Depends(get_c/", "language": "Python", "kind": "function", "signature": "(txn: TransactionCreate, db: Session = Depends(get_db), user=Depends(get_current_user))"}, {"_type": "tag", "name": "date", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-594b2fca/finance_tracker_backend/src/api/transactions.py", "pattern": "/^    date: datetime = Field(default_factory=datetime.utcnow, description=\"Date of transaction\")$/", "language": "Python", "typeref": "typename:datetime", "kind": "variable", "scope": "TransactionBase", "scopeKind": "class"}, {"_type": "tag", "name": "delete_transaction", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-594b2fca/finance_tracker_backend/src/api/transactions.py", "pattern": "/^def delete_transaction(txn_id: int, db: Session = Depends(get_db), user=Depends(get_current_user/", "language": "Python", "kind": "function", "signature": "(txn_id: int, db: Session = Depends(get_db), user=Depends(get_current_user))"}, {"_type": "tag", "name": "description", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-594b2fca/finance_tracker_backend/src/api/transactions.py", "pattern": "/^    description: Optional[str] = Field(\"\", description=\"Description\\/note\")$/", "language": "Python", "typeref": "typename:Optional[str]", "kind": "variable", "scope": "TransactionBase", "scopeKind": "class"}, {"_type": "tag", "name": "get_transactions", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-594b2fca/finance_tracker_backend/src/api/transactions.py", "pattern": "/^def get_transactions(db: Session = Depends(get_db), user=Depends(get_current_user)):$/", "language": "Python", "kind": "function", "signature": "(db: Session = Depends(get_db), user=Depends(get_current_user))"}, {"_type": "tag", "name": "router", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-594b2fca/finance_tracker_backend/src/api/transactions.py", "pattern": "/^router = APIRouter()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "type", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-594b2fca/finance_tracker_backend/src/api/transactions.py", "pattern": "/^    type: str = Field(..., description=\"Type: income or expense\")$/", "language": "Python", "typeref": "typename:str", "kind": "variable", "scope": "TransactionBase", "scopeKind": "class"}, {"_type": "tag", "name": "update_transaction", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-594b2fca/finance_tracker_backend/src/api/transactions.py", "pattern": "/^def update_transaction(txn_id: int, txn: TransactionCreate, db: Session = Depends(get_db), user=/", "language": "Python", "kind": "function", "signature": "(txn_id: int, txn: TransactionCreate, db: Session = Depends(get_db), user=Depends(get_current_user))"}], "hash": "5c28c7501fdfb9973a44f654743d1348", "format-version": 4, "code-base-name": "finance_tracker_backend", "filename": "finance_tracker_backend/src/api/transactions.py", "fields": [{"name": "float amount", "scope": "TransactionBase", "scopeKind": "class", "description": "unavailable"}, {"name": "str category", "scope": "TransactionBase", "scopeKind": "class", "description": "unavailable"}, {"name": "datetime date", "scope": "TransactionBase", "scopeKind": "class", "description": "unavailable"}, {"name": "Optional[str] description", "scope": "TransactionBase", "scopeKind": "class", "description": "unavailable"}, {"name": "router = APIRouter()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "str type", "scope": "TransactionBase", "scopeKind": "class", "description": "unavailable"}]}