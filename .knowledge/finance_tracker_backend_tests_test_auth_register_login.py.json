{"is_source_file": true, "format": "Python", "description": "This file contains test cases for the authentication registration and login endpoints of a FastAPI application, utilizing the TestClient for testing API responses, including registration success, login success, and failure scenarios.", "external_files": ["api.main", "fastapi.testclient", "sys", "pathlib", "random", "string"], "external_methods": ["fastapi.testclient.TestClient", "sys.path.insert", "pathlib.Path.resolve", "pathlib.Path.parent", "random.choices", "string.ascii_lowercase", "string.digits"], "published": [], "classes": [], "methods": [{"name": "random_email()", "description": "Generates a random email address for test isolation.", "scope": "", "scopeKind": ""}, {"name": "test_register_and_login_success()", "description": "Tests successful registration followed by login with the same credentials, verifying the returned access token and user info.", "scope": "", "scopeKind": ""}, {"name": "test_register_and_login_wrong_password()", "description": "Tests registration followed by login attempt with incorrect password, expecting a failure response with status code 401.", "scope": "", "scopeKind": ""}], "calls": ["TestClient(app).post", "client.post", "reg_response.status_code", "login_response.status_code", "login_response.json", "assert"], "search-terms": ["test_auth_register_login", "register", "login", "Auth", "TestClient", "FastAPI", "test"], "state": 2, "file_id": 20, "knowledge_revision": 64, "git_revision": "1cdd97e05b6da8df286c7bb1c10e38e384cc2964", "revision_history": [{"53": "65b14836e88cc2055c26c7be9858a742e5302c20"}, {"54": "65b14836e88cc2055c26c7be9858a742e5302c20"}, {"55": "d7e525cd51a7310faf6841e83734833bbb2b5e9d"}, {"56": "5ca75fde83ab26259e0f440225cd468ce9d7e36b"}, {"57": "6d458fc993a48470ced1acf307d99da7dff7b5a0"}, {"58": "120b140c8f8af04f034219266767425d2030f90b"}, {"59": "48da6eb78bbfaa258e486c8181080e6983edb5ab"}, {"62": "48da6eb78bbfaa258e486c8181080e6983edb5ab"}, {"63": "617cc4a3cc0d30f87fdea6e266d35a60a5cea21a"}, {"64": "1cdd97e05b6da8df286c7bb1c10e38e384cc2964"}], "ctags": [{"_type": "tag", "name": "client", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-594b2fca/finance_tracker_backend/tests/test_auth_register_login.py", "pattern": "/^client = TestClient(app)$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "current_dir", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-594b2fca/finance_tracker_backend/tests/test_auth_register_login.py", "pattern": "/^current_dir = pathlib.Path(__file__).resolve().parent$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "possible_src", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-594b2fca/finance_tracker_backend/tests/test_auth_register_login.py", "pattern": "/^possible_src = [$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "random_email", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-594b2fca/finance_tracker_backend/tests/test_auth_register_login.py", "pattern": "/^def random_email():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "test_register_and_login_success", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-594b2fca/finance_tracker_backend/tests/test_auth_register_login.py", "pattern": "/^def test_register_and_login_success():$/", "language": "Python", "kind": "function", "signature": "()"}, {"_type": "tag", "name": "test_register_and_login_wrong_password", "path": "/home/kavia/workspace/code-generation/finance-tracker-and-budgeting-app-594b2fca/finance_tracker_backend/tests/test_auth_register_login.py", "pattern": "/^def test_register_and_login_wrong_password():$/", "language": "Python", "kind": "function", "signature": "()"}], "hash": "ee3f522b85b963b60eb54f227edaef7e", "format-version": 4, "code-base-name": "finance_tracker_backend", "filename": "finance_tracker_backend/tests/test_auth_register_login.py", "fields": [{"name": "client = TestClient(app)", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "current_dir = pathlib.Path(__file__).resolve().parent", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "possible_src = [", "scope": "", "scopeKind": "", "description": "unavailable"}]}